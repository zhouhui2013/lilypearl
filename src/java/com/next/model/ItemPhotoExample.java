package com.next.model;

import java.util.ArrayList;
import java.util.List;

public class ItemPhotoExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table item_photo
     *
     * @mbggenerated Sun Mar 10 19:51:27 JST 2013
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table item_photo
     *
     * @mbggenerated Sun Mar 10 19:51:27 JST 2013
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table item_photo
     *
     * @mbggenerated Sun Mar 10 19:51:27 JST 2013
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table item_photo
     *
     * @mbggenerated Sun Mar 10 19:51:27 JST 2013
     */
    public ItemPhotoExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table item_photo
     *
     * @mbggenerated Sun Mar 10 19:51:27 JST 2013
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table item_photo
     *
     * @mbggenerated Sun Mar 10 19:51:27 JST 2013
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table item_photo
     *
     * @mbggenerated Sun Mar 10 19:51:27 JST 2013
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table item_photo
     *
     * @mbggenerated Sun Mar 10 19:51:27 JST 2013
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table item_photo
     *
     * @mbggenerated Sun Mar 10 19:51:27 JST 2013
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table item_photo
     *
     * @mbggenerated Sun Mar 10 19:51:27 JST 2013
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table item_photo
     *
     * @mbggenerated Sun Mar 10 19:51:27 JST 2013
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table item_photo
     *
     * @mbggenerated Sun Mar 10 19:51:27 JST 2013
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table item_photo
     *
     * @mbggenerated Sun Mar 10 19:51:27 JST 2013
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table item_photo
     *
     * @mbggenerated Sun Mar 10 19:51:27 JST 2013
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table item_photo
     *
     * @mbggenerated Sun Mar 10 19:51:27 JST 2013
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andItemIdIsNull() {
            addCriterion("item_id is null");
            return (Criteria) this;
        }

        public Criteria andItemIdIsNotNull() {
            addCriterion("item_id is not null");
            return (Criteria) this;
        }

        public Criteria andItemIdEqualTo(Integer value) {
            addCriterion("item_id =", value, "itemId");
            return (Criteria) this;
        }

        public Criteria andItemIdNotEqualTo(Integer value) {
            addCriterion("item_id <>", value, "itemId");
            return (Criteria) this;
        }

        public Criteria andItemIdGreaterThan(Integer value) {
            addCriterion("item_id >", value, "itemId");
            return (Criteria) this;
        }

        public Criteria andItemIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("item_id >=", value, "itemId");
            return (Criteria) this;
        }

        public Criteria andItemIdLessThan(Integer value) {
            addCriterion("item_id <", value, "itemId");
            return (Criteria) this;
        }

        public Criteria andItemIdLessThanOrEqualTo(Integer value) {
            addCriterion("item_id <=", value, "itemId");
            return (Criteria) this;
        }

        public Criteria andItemIdIn(List<Integer> values) {
            addCriterion("item_id in", values, "itemId");
            return (Criteria) this;
        }

        public Criteria andItemIdNotIn(List<Integer> values) {
            addCriterion("item_id not in", values, "itemId");
            return (Criteria) this;
        }

        public Criteria andItemIdBetween(Integer value1, Integer value2) {
            addCriterion("item_id between", value1, value2, "itemId");
            return (Criteria) this;
        }

        public Criteria andItemIdNotBetween(Integer value1, Integer value2) {
            addCriterion("item_id not between", value1, value2, "itemId");
            return (Criteria) this;
        }

        public Criteria andItemPhotoIsNull() {
            addCriterion("item_photo is null");
            return (Criteria) this;
        }

        public Criteria andItemPhotoIsNotNull() {
            addCriterion("item_photo is not null");
            return (Criteria) this;
        }

        public Criteria andItemPhotoEqualTo(String value) {
            addCriterion("item_photo =", value, "itemPhoto");
            return (Criteria) this;
        }

        public Criteria andItemPhotoNotEqualTo(String value) {
            addCriterion("item_photo <>", value, "itemPhoto");
            return (Criteria) this;
        }

        public Criteria andItemPhotoGreaterThan(String value) {
            addCriterion("item_photo >", value, "itemPhoto");
            return (Criteria) this;
        }

        public Criteria andItemPhotoGreaterThanOrEqualTo(String value) {
            addCriterion("item_photo >=", value, "itemPhoto");
            return (Criteria) this;
        }

        public Criteria andItemPhotoLessThan(String value) {
            addCriterion("item_photo <", value, "itemPhoto");
            return (Criteria) this;
        }

        public Criteria andItemPhotoLessThanOrEqualTo(String value) {
            addCriterion("item_photo <=", value, "itemPhoto");
            return (Criteria) this;
        }

        public Criteria andItemPhotoLike(String value) {
            addCriterion("item_photo like", value, "itemPhoto");
            return (Criteria) this;
        }

        public Criteria andItemPhotoNotLike(String value) {
            addCriterion("item_photo not like", value, "itemPhoto");
            return (Criteria) this;
        }

        public Criteria andItemPhotoIn(List<String> values) {
            addCriterion("item_photo in", values, "itemPhoto");
            return (Criteria) this;
        }

        public Criteria andItemPhotoNotIn(List<String> values) {
            addCriterion("item_photo not in", values, "itemPhoto");
            return (Criteria) this;
        }

        public Criteria andItemPhotoBetween(String value1, String value2) {
            addCriterion("item_photo between", value1, value2, "itemPhoto");
            return (Criteria) this;
        }

        public Criteria andItemPhotoNotBetween(String value1, String value2) {
            addCriterion("item_photo not between", value1, value2, "itemPhoto");
            return (Criteria) this;
        }

        public Criteria andPhotoOrderIsNull() {
            addCriterion("photo_order is null");
            return (Criteria) this;
        }

        public Criteria andPhotoOrderIsNotNull() {
            addCriterion("photo_order is not null");
            return (Criteria) this;
        }

        public Criteria andPhotoOrderEqualTo(Integer value) {
            addCriterion("photo_order =", value, "photoOrder");
            return (Criteria) this;
        }

        public Criteria andPhotoOrderNotEqualTo(Integer value) {
            addCriterion("photo_order <>", value, "photoOrder");
            return (Criteria) this;
        }

        public Criteria andPhotoOrderGreaterThan(Integer value) {
            addCriterion("photo_order >", value, "photoOrder");
            return (Criteria) this;
        }

        public Criteria andPhotoOrderGreaterThanOrEqualTo(Integer value) {
            addCriterion("photo_order >=", value, "photoOrder");
            return (Criteria) this;
        }

        public Criteria andPhotoOrderLessThan(Integer value) {
            addCriterion("photo_order <", value, "photoOrder");
            return (Criteria) this;
        }

        public Criteria andPhotoOrderLessThanOrEqualTo(Integer value) {
            addCriterion("photo_order <=", value, "photoOrder");
            return (Criteria) this;
        }

        public Criteria andPhotoOrderIn(List<Integer> values) {
            addCriterion("photo_order in", values, "photoOrder");
            return (Criteria) this;
        }

        public Criteria andPhotoOrderNotIn(List<Integer> values) {
            addCriterion("photo_order not in", values, "photoOrder");
            return (Criteria) this;
        }

        public Criteria andPhotoOrderBetween(Integer value1, Integer value2) {
            addCriterion("photo_order between", value1, value2, "photoOrder");
            return (Criteria) this;
        }

        public Criteria andPhotoOrderNotBetween(Integer value1, Integer value2) {
            addCriterion("photo_order not between", value1, value2, "photoOrder");
            return (Criteria) this;
        }

        public Criteria andPhotoLinkIsNull() {
            addCriterion("photo_link is null");
            return (Criteria) this;
        }

        public Criteria andPhotoLinkIsNotNull() {
            addCriterion("photo_link is not null");
            return (Criteria) this;
        }

        public Criteria andPhotoLinkEqualTo(String value) {
            addCriterion("photo_link =", value, "photoLink");
            return (Criteria) this;
        }

        public Criteria andPhotoLinkNotEqualTo(String value) {
            addCriterion("photo_link <>", value, "photoLink");
            return (Criteria) this;
        }

        public Criteria andPhotoLinkGreaterThan(String value) {
            addCriterion("photo_link >", value, "photoLink");
            return (Criteria) this;
        }

        public Criteria andPhotoLinkGreaterThanOrEqualTo(String value) {
            addCriterion("photo_link >=", value, "photoLink");
            return (Criteria) this;
        }

        public Criteria andPhotoLinkLessThan(String value) {
            addCriterion("photo_link <", value, "photoLink");
            return (Criteria) this;
        }

        public Criteria andPhotoLinkLessThanOrEqualTo(String value) {
            addCriterion("photo_link <=", value, "photoLink");
            return (Criteria) this;
        }

        public Criteria andPhotoLinkLike(String value) {
            addCriterion("photo_link like", value, "photoLink");
            return (Criteria) this;
        }

        public Criteria andPhotoLinkNotLike(String value) {
            addCriterion("photo_link not like", value, "photoLink");
            return (Criteria) this;
        }

        public Criteria andPhotoLinkIn(List<String> values) {
            addCriterion("photo_link in", values, "photoLink");
            return (Criteria) this;
        }

        public Criteria andPhotoLinkNotIn(List<String> values) {
            addCriterion("photo_link not in", values, "photoLink");
            return (Criteria) this;
        }

        public Criteria andPhotoLinkBetween(String value1, String value2) {
            addCriterion("photo_link between", value1, value2, "photoLink");
            return (Criteria) this;
        }

        public Criteria andPhotoLinkNotBetween(String value1, String value2) {
            addCriterion("photo_link not between", value1, value2, "photoLink");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table item_photo
     *
     * @mbggenerated do_not_delete_during_merge Sun Mar 10 19:51:27 JST 2013
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table item_photo
     *
     * @mbggenerated Sun Mar 10 19:51:27 JST 2013
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}